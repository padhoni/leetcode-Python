328:

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next

class Solution:
    def oddEvenList(self, head: Optional[ListNode]) -> Optional[ListNode]:
        if not head or not head.next:
            return head  # Return head if the list is empty or has only one node

        odd = head
        even = head.next
        even_head = head.next  # Keep the head of the even list to connect later

        while even and even.next:  # Loop until there are no more even nodes to process
            odd.next = odd.next.next  # Connect odd nodes
            odd = odd.next

            even.next = even.next.next  # Connect even nodes
            even = even.next

        odd.next = even_head  # Connect the end of the odd list to the head of the even list

        return head
