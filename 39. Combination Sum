class Solution:
    def combinationSum(self, candidates: List[int], target: int) -> List[List[int]]:
        if candidates==None or len(candidates)==0:
            return []
        self.result=[]
        self.combinationSumFun(candidates, target,0,[])
        return self.result
    def combinationSumFun(self, candidates: List[int], target: int, pivot:int, path:List[int]) -> None:
        #base condition
        if target==0:
            self.result.append(path.copy())
        if target<0:
            return
        #logic
        for i in range(pivot, len(candidates)):
            path.append(candidates[i])
            self.combinationSumFun(candidates, target-candidates[i], i, path)
            path.pop()
