LeetCode problem: 540

class Solution:
    def singleNonDuplicate(self, nums: List[int]) -> int:

        l1=len(nums)
        l=0
        r=l1-1
        mid=(l+r)//2

        if (l1==1):
            return nums[0]
        if (nums[l] != nums[l+1]):
            return nums[l]
        if (nums[r]!=nums[r-1]):
            return nums[r]
        
        while (l<=r):
            if (((mid%2==0) and (nums[mid]== nums[mid+1])) or ((mid%2!=0) and (nums[mid]!= nums[mid+1]))):
                l=mid+1
                mid=(l+r)//2
                #print(mid)
            elif (((mid%2!=0) and (nums[mid]== nums[mid+1])) or ((mid%2==0) and (nums[mid]== nums[mid-1]))):
                r=mid-1
                mid=(l+r)//2
            elif (l==r or mid%2==0):
                return nums[mid]
                
        return -1
